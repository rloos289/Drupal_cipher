<?php

function cipher_translate_menu() {
    $items['cipher_translate'] = array(
        'title' => 'Cipher Translate',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cipher_translate_form'),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM,
    );
    $items['cipher_translate_success_page'] = array(
        'title' => 'Decode Successful',
        'page callback' => 'cipher_translate_success',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    return $items;
}

function cipher_translate_form() {
    $form['phrase'] = array(
        '#title' => 'phrase',
        '#type' => 'textfield',
        '#description' => t('Please enter the phrase you want to decrypt.'),
        '#element_validate' => array('element_validate_translate_characters'),
        '#required' => TRUE,
    );
    $form['direction'] = array(
        '#title' => 'direction',
        '#type' => 'textfield',
        '#description' => t('Left or right?'),
        '#element_validate' => array('element_validate_translate_direction'),
        '#required' => TRUE,
    );

    $form['shift_value'] = array(
        '#title' => 'shift value',
        '#type' => 'textfield',
        '#description' => t('encoding value?'),
        '#element_validate' => array('element_validate_integer_positive'),
        '#required' => TRUE,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'decode your phrase',
    );
    return $form;
}

function element_validate_translate_characters($element) {
    if (preg_match("/[^a-zA-Z0-9\/_.;,!?'|+ -]/", $element['#value'])) {
        form_error($element, t('Please do not use any special characters that are not punctuation'));
    }
}

function element_validate_translate_direction($element) {
    $direction_check = trim(strtolower($element['#value']));

    if ($direction_check == 'right' || $direction_check == 'left') {
        return;
    } else {
        form_error($element, t('Please enter either "left" or "right"'));
    }
}

function change_letter_back($letter, $direction, $shift_value, $dictionary) {

    //code is redundant here but helps with readability
    if ($direction == "right") {
        $dictionary = $dictionary;
    } elseif ($direction == "left") {
        $dictionary = array_reverse($dictionary);
    }
    $dictionary_value = (array_search($letter, $dictionary)) + $shift_value;

    //if number is 26, number is actually 0 because of offset inherent to arrays
    if ($dictionary_value == 26) {
        $dictionary_value = 0;
    }
    //if number is bigger than 26
    if ($dictionary_value > 26) {
        $dictionary_value = $dictionary_value % 26;
    }
    $new_letter = $dictionary[$dictionary_value];
    return $new_letter;
}

function cipher_translate_form_submit($form, &$form_state) {
    $phrase = $form_state['values']['phrase'];

    if ($form_state['values']['direction'] == 'left') {
        $direction = 'right';
    } elseif ($form_state['values']['direction'] == 'right') {
        $direction = 'left';
    };

    $shift_value = $form_state['values']['shift_value'];
    $dictionary = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');

    $phrase = str_split(strtolower($phrase));
    $result = array();

    for ($i = 0; $i <= count($phrase) ; $i++) {
        if ((in_array($phrase[$i], $dictionary))) { //code works but results in offset error here for some reason
            $new_letter = change_letter($phrase[$i], $direction, $shift_value, $dictionary);
            array_push($result, $new_letter);
        } else {
            array_push($result, $phrase[$i]); //code works but results in offset error here for some reason
        }
    }

    $result = join($result);

    $_SESSION['encoded_phrase'] = $result;
    $form_state['redirect'] = 'cipher_translate_success_page';
}

function cipher_translate_success() {
    $final = $_SESSION['encoded_phrase'];
    return $final;
}
